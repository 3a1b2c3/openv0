{"componentId":"FileUpload_QE3bV","iterations":[{"version":"1695051330695","prompt":"a upload file component","timestamp":1695051330695,"code":"import React, { useState } from 'react';\nimport { Cloudy } from \"lucide-react\"; // import appropriate icons \nimport { Button } from \"@/components/ui/button\"; \nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Progress } from \"@/components/ui/progress\";\n\n// This mock UI component doesn't upload file anywhere \n\nconst FileUpload: React.FC = () => {\n    const [ selectedFile, setSelectedFile ] = useState(null);\n    const [ loaded, setLoaded ] = useState(0);\n\n    const checkMimeType=(event)=>{\n        //getting file object\n        let file = event.target.files[0] \n        //define allow mime type\n        const types = ['image/png', 'image/jpeg', 'image/gif']\n        if (types.every(type => file.type !== type)) {\n            alert(file.type+' is not a supported format\\n'+\n            'Supported formats: .png/.jpeg/.gif')\n             return false;\n        }\n        return true;\n    }\n\n    const checkFileSize=(event)=>{\n        let file = event.target.files[0]\n        const size = 15000 //15KB\n        if (file.size > size) {\n            alert('Max size is ' + size/1000 + 'KB')\n            return false\n        } \n        return true;   \n    }\n\n    const handleSelectedFile = event => {\n        if(checkMimeType(event) && checkFileSize(event)){ \n          setSelectedFile(event.target.files[0]);\n          setLoaded(0)\n        }\n    }\n\n    return (\n        <div className=\"max-w-lg mx-auto py-10\">\n            <Alert>\n                <Cloudy className=\"h-4 w-4 mr-2\" />\n                <AlertTitle>Upload file!</AlertTitle>\n                <AlertDescription>\n                    Please select a file to upload.\n                </AlertDescription>\n            </Alert>\n            <div className=\"mt-6\">\n                <input \n                    type=\"file\" \n                    onChange={handleSelectedFile} \n                />\n                {selectedFile && (<span className=\"ml-3\">{selectedFile.name}</span>)}\n            </div>\n            {loaded > 0 && \n                <div className=\"mt-3\">\n                    <Progress value={loaded} className=\"w-full\" />\n                </div>\n            }        \n            <div className=\"mt-6\">\n                <Button>Upload</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default FileUpload;"}]}